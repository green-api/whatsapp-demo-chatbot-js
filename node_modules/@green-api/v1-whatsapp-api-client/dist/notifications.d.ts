import Api from './api';
import { V1 } from './v1-types';
export declare class Notifications {
    private readonly api;
    private readonly url;
    constructor(api: Api);
    /**
     * Notifications include data about incoming messages, statues, sent messges.
     * After receving notification it have to be deleted with the method deleteNotification() in order to receive the next notification
     * Inner implementation uses long polling. Every method invokes loop that waits 20 seconds for the next message.
     * If no messages arrive then the loop ends with the empty response.
     */
    receiveNotification(): Promise<V1.NotificationResponse>;
    /**
     * Delete notification for remote server using receiptId
     * @param receiptId message id get coming from notification
     */
    deleteNotification(receiptId: number): Promise<any>;
}
