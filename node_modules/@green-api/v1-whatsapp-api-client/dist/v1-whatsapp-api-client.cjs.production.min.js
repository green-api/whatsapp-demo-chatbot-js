"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t,e=(t=require("axios"))&&"object"==typeof t&&"default"in t?t.default:t;const s=(t,e)=>{if(t)return t;throw new Error(e)},i=(t,e)=>{if(a(t))throw new Error(e);return t},a=t=>0===Object.keys(t).length&&t.constructor===Object,r=t=>((t,e)=>{if(t&&/^-{0,1}\d+$/.test(t))return t;throw new Error("phone number has incorect format")})(t),o={apiRoot:"https://api.green-api.com/v1",mediaRoot:"https://media.green-api.com/v1"};class n{constructor(t,e){this.token=t,this.DEFAULT_AXIOS_CFG={headers:{Authorization:"Bearer "+this.token}},this.options={...o,...e},(t=>{if(t)return t;throw new Error("auth token not defined")})(t)}async get(t){const s=await e.get(`${this.options.apiRoot}/${t}`,this.DEFAULT_AXIOS_CFG);try{return s.data}catch(t){this.processError(t)}}async delete(t){const s=await e.delete(`${this.options.apiRoot}/${t}`,this.DEFAULT_AXIOS_CFG);try{return s.data}catch(t){this.processError(t)}}async post(t,s){try{return(await e.post(`${this.options.apiRoot}/${t}`,s,this.DEFAULT_AXIOS_CFG)).data}catch(t){this.processError(t)}}async postMedia(t,s,i){try{const a={method:"post",url:`${this.options.mediaRoot}/${t}`,headers:{"X-Gr-File-Extension":i,Authorization:this.DEFAULT_AXIOS_CFG.headers.Authorization,"Content-Type":"text/plain"},data:s};return(await e(a)).data}catch(t){this.processError(t)}}processError(t){throw t.isAxiosError&&t.response&&t.response.data?new Error(JSON.stringify(t.response.data)):t}}var p;!function(t){let e;!function(t){t.Individual="individual",t.Group="group"}(e=t.RecipientTypes||(t.RecipientTypes={}))}(p||(p={}));class d{constructor(t){this.api=t,this.url="messages"}async sendTextMessage(t,e){return r(t),s(e,"parameter text must not be empty"),this.api.post(this.url,{to:t,type:"text",text:{body:e}})}async sendTextMessageToGroup(t,e){return s(t,"parameter chatId must not be empty"),s(e,"parameter text must not be empty"),this.api.post(this.url,{recipient_type:"group",to:t,type:"text",text:{body:e}})}async sendImageById(t,e,i,a=p.RecipientTypes.Individual){return r(t),s(e,"parameter mediaId must not be empty"),this.api.post(this.url,{recipient_type:a,to:t,type:"image",image:{id:e,caption:i}})}async sendImageByLink(t,e,i,a=p.RecipientTypes.Individual){return r(t),s(e,"parameter link must not be empty"),this.api.post(this.url,{recipient_type:a,to:t,type:"image",image:{link:e,caption:i}})}async sendVideoById(t,e,i=p.RecipientTypes.Individual){return r(t),s(e,"parameter mediaId must not be empty"),this.api.post(this.url,{recipient_type:i,to:t,type:"video",video:{id:e}})}async sendVideoByLink(t,e,i=p.RecipientTypes.Individual){return r(t),s(e,"parameter link must not be empty"),this.api.post(this.url,{recipient_type:i,to:t,type:"video",video:{link:e}})}async sendAudioById(t,e,i=p.RecipientTypes.Individual){return r(t),s(e,"parameter mediaId must not be empty"),this.api.post(this.url,{recipient_type:i,to:t,type:"audio",audio:{id:e}})}async sendAudioByLink(t,e,i=p.RecipientTypes.Individual){return r(t),s(e,"parameter link must not be empty"),this.api.post(this.url,{recipient_type:i,to:t,type:"audio",audio:{link:e}})}async sendDocumentById(t,e,i=p.RecipientTypes.Individual){return r(t),s(e,"parameter mediaId must not be empty"),this.api.post(this.url,{recipient_type:i,to:t,type:"document",document:{id:e}})}async sendDocumentByLink(t,e,i=p.RecipientTypes.Individual){return r(t),s(e,"parameter link must not be empty"),this.api.post(this.url,{recipient_type:i,to:t,type:"document",document:{link:e}})}}class m{constructor(t){this.api=t,this.url="media"}async uploadMedia(t,e){return s(t,"parameter data must not be empty"),s(e,"parameter fileExtension must not be empty"),e.startsWith(".")&&(e=e.slice(1)),(await this.api.postMedia(this.url,t,e)).media[0].id}}class u{constructor(t){this.api=t,this.url="broadcast"}async sendBroadcastTextMessage(t,e,a,r,o){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter text must not be empty");const n={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"text",text:{body:e}};return a&&(n.period=a),r&&(n.active=r),o&&(n.startAt=o),this.api.post(this.url,n)}async sendBroadcastImageById(t,e,a,r,o,n){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter mediaId must not be empty");const p={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"image",image:{id:e,caption:a}};return r&&(p.period=r),o&&(p.active=o),n&&(p.startAt=n),this.api.post(this.url,p)}async sendBroadcastImageByLink(t,e,a,r,o,n){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter mediaId must not be empty");const p={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"image",image:{link:e,caption:a}};return r&&(p.period=r),o&&(p.active=o),n&&(p.startAt=n),this.api.post(this.url,p)}async sendBroadcastVideoById(t,e,a,r,o){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter mediaId must not be empty");const n={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"video",video:{id:e}};return a&&(n.period=a),r&&(n.active=r),o&&(n.startAt=o),this.api.post(this.url,n)}async sendBroadcastVideoByLink(t,e,a,r,o){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter mediaId must not be empty");const n={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"video",video:{link:e}};return a&&(n.period=a),r&&(n.active=r),o&&(n.startAt=o),this.api.post(this.url,n)}async sendBroadcastDocumentById(t,e,a,r,o){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter mediaId must not be empty");const n={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"document",document:{id:e}};return a&&(n.period=a),r&&(n.active=r),o&&(n.startAt=o),this.api.post(this.url,n)}async sendBroadcastDocumentByLink(t,e,a,r,o){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter mediaId must not be empty");const n={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"document",document:{link:e}};return a&&(n.period=a),r&&(n.active=r),o&&(n.startAt=o),this.api.post(this.url,n)}async sendBroadcastAudioById(t,e,a,r,o){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter mediaId must not be empty");const n={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"audio",audio:{id:e}};return a&&(n.period=a),r&&(n.active=r),o&&(n.startAt=o),this.api.post(this.url,n)}async sendBroadcastAudioByLink(t,e,a,r,o){i(t,"parameter phoneNumbers must not be empty"),s(e,"parameter mediaId must not be empty");const n={name:"Broadcast from Green-API",to:this.toWaIds(t),type:"audio",audio:{link:e}};return a&&(n.period=a),r&&(n.active=r),o&&(n.startAt=o),this.api.post(this.url,n)}toWaIds(t){if(t.length<2)throw new Error("There are not enough phones to send broadcast. Must be at least 2");return t.map(t=>({wa_id:t}))}}class c{constructor(t){this.api=t,this.url="notifications"}async receiveNotification(){return this.api.get(this.url)}async deleteNotification(t){return this.api.delete(`${this.url}/${t}`)}}class y{constructor(t,e){const s=new n(t,e);this.messages=new d(s),this.media=new m(s),this.broadcasts=new u(s),this.notifications=new c(s)}}module.exports=Object.assign(y,{default:y}),exports.default=y;
//# sourceMappingURL=v1-whatsapp-api-client.cjs.production.min.js.map
